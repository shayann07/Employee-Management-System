// Generated by view binder compiler. Do not edit!
package com.example.tesla.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tesla.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEmployeeListBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView allText;

  @NonNull
  public final FloatingActionButton createEmployeeFab;

  @NonNull
  public final RecyclerView employeeRecyclerView;

  @NonNull
  public final TextView noEmployeesTV;

  private FragmentEmployeeListBinding(@NonNull FrameLayout rootView, @NonNull TextView allText,
      @NonNull FloatingActionButton createEmployeeFab, @NonNull RecyclerView employeeRecyclerView,
      @NonNull TextView noEmployeesTV) {
    this.rootView = rootView;
    this.allText = allText;
    this.createEmployeeFab = createEmployeeFab;
    this.employeeRecyclerView = employeeRecyclerView;
    this.noEmployeesTV = noEmployeesTV;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEmployeeListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEmployeeListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_employee_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEmployeeListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.all_text;
      TextView allText = ViewBindings.findChildViewById(rootView, id);
      if (allText == null) {
        break missingId;
      }

      id = R.id.create_employee_fab;
      FloatingActionButton createEmployeeFab = ViewBindings.findChildViewById(rootView, id);
      if (createEmployeeFab == null) {
        break missingId;
      }

      id = R.id.employee_recycler_view;
      RecyclerView employeeRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (employeeRecyclerView == null) {
        break missingId;
      }

      id = R.id.no_EmployeesTV;
      TextView noEmployeesTV = ViewBindings.findChildViewById(rootView, id);
      if (noEmployeesTV == null) {
        break missingId;
      }

      return new FragmentEmployeeListBinding((FrameLayout) rootView, allText, createEmployeeFab,
          employeeRecyclerView, noEmployeesTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
